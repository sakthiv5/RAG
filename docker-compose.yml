version: '3.5'
services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      ETCD_AUTO_COMPACTION_MODE: revision
      ETCD_AUTO_COMPACTION_RETENTION: "1000"
      ETCD_QUOTA_BACKEND_BYTES: "4294967296"
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379
    ports:
      - "2379:2379"

  minio:
    image: minio/minio:RELEASE.2023-01-12T02-06-16Z
    environment:
      MINIO_USERNAME: ${MINIO_USERNAME}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
    command: server /data
    ports:
      - "9000:9000"

  milvus:
    image: milvusdb/milvus:v2.3.9
    container_name: milvus
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_USERNAME: ${MINIO_USERNAME}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
    ports:
      - "19530:19530"
    depends_on:
      - etcd
      - minio
    command: milvus run standalone

  # RAG Flask Application (optional - for containerized deployment)
  rag-app:
    build: .
    container_name: rag-flask-app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      - MINIO_USERNAME=${MINIO_USERNAME}
      - MINIO_PASSWORD=${MINIO_PASSWORD}
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=false
      - LOG_LEVEL=INFO
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    depends_on:
      - milvus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - full-stack  # Use 'docker-compose --profile full-stack up' to include this service
